The implementation of our project involves mainly in:
        1. Designing a Bot.
        2. Live streaming the cam.
        3. Controlling the Bot.
        4. Showing Directions.
        5. Deploying the website.
        
1. Designing a Bot:
    Bot plays a crucial role in our project.
    For prototype we designed the bot by using plastic.
    Two high speed motors are fixed on the rear side of the bot.
    And the bot is equipped with a camera and raspberry pi.

2. Live streaming the cam:
   To live stream the camera, we are running a server in the raspberry pi in our case its apache server.
   And one can view the live stream through a browser.
   The below are the steps to install and configure the web server.
   Step 1: Update your RPi with the following commands:
                     sudo apt-get update
	                   sudo apt-get dist-upgrade

   Step 2: Clone the code from github and enable and run the install script:
                      git clone https://github.com/silvanmelchior/RPi_Cam_Web_Interface.git
                      cd RPi_Cam_Web_Interface
                      ./install.sh
  6 separate scripts are provided to do separate installation and maintenance functions.
  The scripts are
  install.sh main installation as used in step2 above
  update.sh check for updates and then run main installation
  start.sh starts the software. If already running it restarts.
  stop.sh stops the software
  remove.sh removes the software
  debug.sh is same as start but allows raspimjpeg output to console for debugging

3. Controlling the bot:
  To control the Bot we should provide some buttons in the web interface and we can achieve this by adding some buttons and macros in the
  www folder which resides in home/var/html.
  One can add the buttons by writing them in the Userbuttons file.
  The file is just a text file and contains definition lines which are just.
                                                      buttonName,macroname.sh
  When a button is pressed then the corresponding macro is executed.
  The macro files contains the code to control the gpio pins.
  
4. Showing the directions:
  


 
    
    
